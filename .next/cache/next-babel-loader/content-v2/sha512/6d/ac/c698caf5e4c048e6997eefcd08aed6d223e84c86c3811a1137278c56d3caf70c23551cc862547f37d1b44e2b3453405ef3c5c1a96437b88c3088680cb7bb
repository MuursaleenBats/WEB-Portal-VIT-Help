{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sam/Desktop/vithelp-next/layouts/Enterprise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\"; // reactstrap components\n\nimport { Container } from \"reactstrap\"; // core components\n\nimport EnterpriseNavbar from \"components/Navbars/EnterpriseNavbar.js\";\nimport EnterpriseFooter from \"components/Footers/EnterpriseFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport routes from \"enterprise.js\";\n\nfunction Enterprise(props) {\n  // used for checking current route\n  const router = useRouter();\n  let mainContentRef = /*#__PURE__*/React.createRef();\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContentRef.current.scrollTop = 0;\n  }, []);\n\n  const getBrandText = () => {\n    for (let i = 0; i < routes.length; i++) {\n      if (router.route.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n\n    return \"VITHELP\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, _objectSpread(_objectSpread({}, props), {}, {\n      routes: routes,\n      logo: {\n        innerLink: \"/enterprise/index\",\n        imgSrc: require(\"assets/img/brand/VITLogo.png\"),\n        imgAlt: \"...\"\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      ref: mainContentRef,\n      children: [/*#__PURE__*/_jsxDEV(EnterpriseNavbar, _objectSpread(_objectSpread({}, props), {}, {\n        brandText: getBrandText()\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), props.children, /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Enterprise;","map":{"version":3,"sources":["/home/sam/Desktop/vithelp-next/layouts/Enterprise.js"],"names":["React","useRouter","Container","EnterpriseNavbar","EnterpriseFooter","Sidebar","routes","Enterprise","props","router","mainContentRef","createRef","useEffect","document","documentElement","scrollTop","scrollingElement","current","getBrandText","i","length","route","indexOf","layout","path","name","innerLink","imgSrc","require","imgAlt","children"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB;AACA,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,MAAIS,cAAc,gBAAGV,KAAK,CAACW,SAAN,EAArB;AACAX,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpBC,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqC,CAArC;AACAF,IAAAA,QAAQ,CAACG,gBAAT,CAA0BD,SAA1B,GAAsC,CAAtC;AACAL,IAAAA,cAAc,CAACO,OAAf,CAAuBF,SAAvB,GAAmC,CAAnC;AACD,GAJD,EAIG,EAJH;;AAKA,QAAMG,YAAY,GAAG,MAAM;AACzB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,MAAM,CAACc,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,UAAIV,MAAM,CAACY,KAAP,CAAaC,OAAb,CAAqBhB,MAAM,CAACa,CAAD,CAAN,CAAUI,MAAV,GAAmBjB,MAAM,CAACa,CAAD,CAAN,CAAUK,IAAlD,MAA4D,CAAC,CAAjE,EAAoE;AAClE,eAAOlB,MAAM,CAACa,CAAD,CAAN,CAAUM,IAAjB;AACD;AACF;;AACD,WAAO,SAAP;AACD,GAPD;;AAQA,sBACE;AAAA,4BACE,QAAC,OAAD,kCACMjB,KADN;AAEE,MAAA,MAAM,EAAEF,MAFV;AAGE,MAAA,IAAI,EAAE;AACJoB,QAAAA,SAAS,EAAE,mBADP;AAEJC,QAAAA,MAAM,EAAEC,OAAO,CAAC,8BAAD,CAFX;AAGJC,QAAAA,MAAM,EAAE;AAHJ;AAHR;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAEnB,cAAnC;AAAA,8BACE,QAAC,gBAAD,kCAAsBF,KAAtB;AAA6B,QAAA,SAAS,EAAEU,YAAY;AAApD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGV,KAAK,CAACsB,QAFT,eAGE,QAAC,SAAD;AAAW,QAAA,KAAK;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAoBD;;AAED,eAAevB,UAAf","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport EnterpriseNavbar from \"components/Navbars/EnterpriseNavbar.js\";\nimport EnterpriseFooter from \"components/Footers/EnterpriseFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"enterprise.js\";\n\nfunction Enterprise(props) {\n  // used for checking current route\n  const router = useRouter();\n  let mainContentRef = React.createRef();\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContentRef.current.scrollTop = 0;\n  }, []);\n  const getBrandText = () => {\n    for (let i = 0; i < routes.length; i++) {\n      if (router.route.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return \"VITHELP\";\n  };\n  return (\n    <>\n      <Sidebar\n        {...props}\n        routes={routes}\n        logo={{\n          innerLink: \"/enterprise/index\",\n          imgSrc: require(\"assets/img/brand/VITLogo.png\"),\n          imgAlt: \"...\",\n        }}\n      />\n      <div className=\"main-content\" ref={mainContentRef}>\n        <EnterpriseNavbar {...props} brandText={getBrandText()} />\n        {props.children}\n        <Container fluid>\n        </Container>\n      </div>\n\n    </>\n  );\n}\n\nexport default Enterprise;\n"]},"metadata":{},"sourceType":"module"}